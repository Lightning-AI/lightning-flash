########
FiftyOne
########

We have collaborated with the team at 
`Voxel51 <https://voxel51.com>`_ to integrate their tool,
`FiftyOne <https://fiftyone.ai>`_, into Flash.

FiftyOne is an open-source tool for building high-quality
datasets and computer vision models. The FiftyOne API and App enable you to
visualize datasets and interpret models faster and more effectively.

This integration allows you to view predictions generated by Flash tasks in the
:ref:`FiftyOne App <fiftyone:fiftyone-app>`, as well as easily incorporate 
:ref:`FiftyOne Datasets <fiftyone:fiftyone-basics>` into your Flash tasks. All image and video tasks
are supported!

.. raw:: html

  <div style="margin-top: 20px; margin-bottom: 20px">
    <video controls muted poster="https://voxel51.com/images/fiftyone_poster.png" style="width: 100%;">
      <source src="https://voxel51.com/images/fiftyone_long_sizzle.mp4" type="video/mp4">
    </video>
  </div>

************
Installation
************

In order to utilize this integration with FiftyOne, you will need to 
:ref:`install the tool<fiftyone:installing-fiftyone>`:

.. code:: shell
    
    pip install fiftyone


***********************
Visualizing predictions
***********************

This integration adds the ability to visualize and explore the predictions
generated by your tasks and models by adding the 
:func:`~flash.core.integrations.fiftyone.fiftyone_visualize`
function that works with the following serializers:

* :class:`FiftyOneLabels(return_filepath=True)<flash.core.classification.FiftyOneLabels>`
* :class:`FiftyOneSegmentationLabels(return_filepath=True)<flash.image.segmentation.serialization.FiftyOneSegmentationLabels>`
* :class:`FiftyOneDetectionLabels(return_filepath=True)<flash.image.detection.serialization.FiftyOneDetectionLabels>`

The :func:`~flash.core.integrations.fiftyone.fiftyone_visualize` function accepts a list of 
dictionaries containing :ref:`FiftyOne Label<fiftyone:using-labels>` objects
and filepaths which is the output of the FiftyOne serializers when the flag
``return_filepath=True``.

.. literalinclude:: ../../../flash_examples_integrations/fiftyone/image_classification.py
    :language: python
    :lines: 14-


*************************
Loading FiftyOne datasets
*************************

The above workflow is great for visualizing model predictions. However, if you
store your data in a FiftyOne Dataset initially, then you can also visualize
ground truth annotations allowing you to perform more complex analysis with 
:ref:`views <fiftyone:using-views>` into your data and
:ref:`evaluation <fiftyone:evaluating-models>` of your model results.

The
:meth:`~flash.core.data_module.DataModule.from_fiftyone_datasets`
method allows you to load your FiftyOne Datasets directly into a
:class:`~flash.core.data_module.DataModule` to be used for training,
testing, or inference.

.. literalinclude:: ../../../flash_examples_integrations/fiftyone/image_classification_fiftyone_datasets.py
    :language: python
    :lines: 14-

------

*************
API reference
*************

.. _fiftyone_labels:

FiftyOneLabels
--------------

.. autoclass:: flash.core.classification.FiftyOneLabels
    :members:
    :exclude-members: forward

.. _fiftyone_segmentation_labels:

FiftyOneSegmentationLabels
--------------------------

.. autoclass:: flash.image.segmentation.serialization.FiftyOneSegmentationLabels
    :members:
    :exclude-members: forward

.. _fiftyone_detection_labels:

FiftyOneDetectionLabels
-----------------------

.. autoclass:: flash.image.detection.serialization.FiftyOneDetectionLabels
    :members:
    :exclude-members: forward
